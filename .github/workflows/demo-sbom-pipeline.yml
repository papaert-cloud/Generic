---
name: Demo SBOM pipeline
on:
  workflow_dispatch: true
  push:
    branches:
      - main
      - docs-reorg

permissions:
  id-token: write   # required for GitHub OIDC
  contents: read

jobs:
  generate-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up syft + trivy
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          SYFT_INSTALL_URL: >
            https://raw.githubusercontent.com/anchore/syft/main/install.sh
          TRIVY_BASE: >
            https://raw.githubusercontent.com/aquasecurity/trivy/main
          TRIVY_INSTALL_URL: ${TRIVY_BASE}/contrib/install.sh
          curl -sSfL ${SYFT_INSTALL_URL} | sh -s -- -b /usr/local/bin
          curl -sfL ${TRIVY_INSTALL_URL} | sh -s -- -b /usr/local/bin

      - name: Generate SBOM (syft)
        run: |
          syft . -o json > output/sbom.json

      - name: Scan (trivy)
        run: |
          trivy filesystem --format json -o output/scan.json . || true

      - name: Upload artifacts to S3 via OIDC
        env:
          S3_BUCKET_BASE: s3://REPLACE-ME-demo-bucket
          S3_URI: |
            ${S3_BUCKET_BASE}/${{ github.repository }}/$GITHUB_RUN_ID/
        run: |
          # Configure AWS credentials via OIDC and assume role
          echo "Uploading artifacts to $S3_URI"
          gh auth setup-git 2>/dev/null || true
          ls -la output

  kyverno-check:
    runs-on: ubuntu-latest
    needs: generate-and-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Kyverno CLI (example)
        run: |
          # If you want to run Kyverno policies in CI without cluster,
          # use the Kyverno CLI
          KYVERNO_IMAGE=ghcr.io/kyverno/kyverno:latest
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            ${KYVERNO_IMAGE} kyverno test /workspace/policies || true

  notes:
    runs-on: ubuntu-latest
    needs: [generate-and-scan, kyverno-check]
    steps:
      - name: Output artifacts list
        run: ls -la output || true
